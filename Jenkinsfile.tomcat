pipeline {
    agent any
    
    environment {
        // Tomcat Configuration
        TOMCAT_HOME = 'C:\\Program Files\\Apache Software Foundation\\Tomcat 10.0'
        TOMCAT_WEBAPPS = "${TOMCAT_HOME}\\webapps"
        TOMCAT_MANAGER_URL = 'http://localhost:8080/manager'
        
        // Build Configuration
        JAVA_HOME = 'C:\\Program Files\\Java\\jdk-21'
        APP_NAME = 'health-records'
        WAR_FILE = "${APP_NAME}.war"
        
        // Frontend Configuration
        NODE_HOME = 'C:\\Program Files\\nodejs'
        
        // Build Directory
        BUILD_DIR = 'C:\\health-records-build'
    }
    
    stages {
        stage('üîß Environment Setup') {
            steps {
                echo "üîß Setting up build environment..."
                bat '''
                    echo Java Version:
                    "%JAVA_HOME%\\bin\\java" -version
                    echo Maven Version:
                    mvn -version
                    echo Node Version:
                    "%NODE_HOME%\\node" -version
                    echo NPM Version:
                    "%NODE_HOME%\\npm" -version
                '''
            }
        }
        
        stage('üì¶ Checkout Code') {
            steps {
                echo "üì¶ Checking out source code..."
                checkout scm
            }
        }
        
        stage('üèóÔ∏è Build Backend WAR') {
            steps {
                echo "üèóÔ∏è Building Spring Boot WAR file..."
                bat '''
                    echo Building WAR file for Tomcat deployment...
                    mvn clean package -DskipTests -Dspring.profiles.active=production
                    
                    echo Checking if WAR file was created...
                    if exist "target\\%WAR_FILE%" (
                        echo ‚úÖ WAR file created successfully: target\\%WAR_FILE%
                        dir target\\*.war
                    ) else (
                        echo ‚ùå WAR file not found!
                        dir target\\
                        exit /b 1
                    )
                '''
            }
        }
        
        stage('üé® Build Frontend') {
            steps {
                echo "üé® Building React frontend..."
                dir('frontend') {
                    bat '''
                        echo Installing frontend dependencies...
                        "%NODE_HOME%\\npm" install
                        
                        echo Building production frontend...
                        "%NODE_HOME%\\npm" run build
                        
                        echo Checking build output...
                        if exist "dist" (
                            echo ‚úÖ Frontend build successful
                            dir dist
                        ) else (
                            echo ‚ùå Frontend build failed!
                            exit /b 1
                        )
                    '''
                }
            }
        }
        
        stage('üìÅ Prepare Deployment Directory') {
            steps {
                echo "üìÅ Preparing deployment directory..."
                bat '''
                    echo Creating build directory...
                    if not exist "%BUILD_DIR%" mkdir "%BUILD_DIR%"
                    
                    echo Copying WAR file...
                    copy "target\\%WAR_FILE%" "%BUILD_DIR%\\"
                    
                    echo Copying frontend assets...
                    if exist "%BUILD_DIR%\\static" rmdir /s /q "%BUILD_DIR%\\static"
                    xcopy "frontend\\dist" "%BUILD_DIR%\\static\\" /E /I /Y
                    
                    echo Build directory contents:
                    dir "%BUILD_DIR%"
                '''
            }
        }
        
        stage('üõë Stop Tomcat') {
            steps {
                echo "üõë Stopping Tomcat server..."
                bat '''
                    echo Stopping Tomcat service...
                    net stop Tomcat10 2>nul || echo Tomcat service not running
                    
                    echo Waiting for Tomcat to stop...
                    timeout /t 10 /nobreak
                    
                    echo Checking if Tomcat process is still running...
                    taskkill /f /im java.exe 2>nul || echo No Java processes to kill
                '''
            }
        }
        
        stage('üóëÔ∏è Undeploy Previous Version') {
            steps {
                echo "üóëÔ∏è Removing previous deployment..."
                bat '''
                    echo Removing old WAR file...
                    if exist "%TOMCAT_WEBAPPS%\\%WAR_FILE%" (
                        del "%TOMCAT_WEBAPPS%\\%WAR_FILE%"
                        echo ‚úÖ Old WAR file removed
                    ) else (
                        echo No previous WAR file found
                    )
                    
                    echo Removing old application directory...
                    if exist "%TOMCAT_WEBAPPS%\\%APP_NAME%" (
                        rmdir /s /q "%TOMCAT_WEBAPPS%\\%APP_NAME%"
                        echo ‚úÖ Old application directory removed
                    ) else (
                        echo No previous application directory found
                    )
                '''
            }
        }
        
        stage('üì¶ Deploy to Tomcat') {
            steps {
                echo "üì¶ Deploying application to Tomcat..."
                bat '''
                    echo Copying WAR file to Tomcat webapps...
                    copy "%BUILD_DIR%\\%WAR_FILE%" "%TOMCAT_WEBAPPS%\\"
                    
                    echo Verifying WAR file deployment...
                    if exist "%TOMCAT_WEBAPPS%\\%WAR_FILE%" (
                        echo ‚úÖ WAR file deployed successfully
                        dir "%TOMCAT_WEBAPPS%\\%WAR_FILE%"
                    ) else (
                        echo ‚ùå WAR file deployment failed!
                        exit /b 1
                    )
                '''
            }
        }
        
        stage('üöÄ Start Tomcat') {
            steps {
                echo "üöÄ Starting Tomcat server..."
                bat '''
                    echo Starting Tomcat service...
                    net start Tomcat10
                    
                    echo Waiting for Tomcat to start...
                    timeout /t 30 /nobreak
                    
                    echo Checking Tomcat status...
                    netstat -an | findstr :8080 || echo Tomcat might still be starting...
                '''
            }
        }
        
        stage('‚úÖ Health Check') {
            steps {
                echo "‚úÖ Performing health check..."
                script {
                    def maxRetries = 12
                    def retryCount = 0
                    def success = false
                    
                    while (retryCount < maxRetries && !success) {
                        try {
                            bat '''
                                echo Attempt %((retryCount+1)) of %maxRetries%: Checking application health...
                                
                                echo Checking Tomcat Manager...
                                curl -f http://localhost:8080/ && echo ‚úÖ Tomcat is running
                                
                                echo Checking if application is deployed...
                                curl -f http://localhost:8080/%APP_NAME%/ && echo ‚úÖ Application is accessible
                            '''
                            success = true
                        } catch (Exception e) {
                            retryCount++
                            if (retryCount < maxRetries) {
                                echo "Health check failed (attempt ${retryCount}/${maxRetries}). Retrying in 10 seconds..."
                                bat 'timeout /t 10 /nobreak'
                            } else {
                                echo "‚ùå Health check failed after ${maxRetries} attempts"
                                throw e
                            }
                        }
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo "üßπ Cleaning up workspace..."
            cleanWs()
        }
        success {
            echo """
üéâ Deployment Successful! üéâ

üì± Your Health Records application is now deployed to Tomcat!

üîó Access your application:
   ‚Ä¢ Main App: http://localhost:8080/${APP_NAME}
   ‚Ä¢ Tomcat Manager: http://localhost:8080/manager
   
üìã Deployment Details:
   ‚Ä¢ WAR File: ${WAR_FILE}
   ‚Ä¢ Location: ${TOMCAT_WEBAPPS}
   ‚Ä¢ Build Time: ${new Date()}
   
üéØ Next Steps:
   1. Open http://localhost:8080/manager to see your deployed app
   2. Access your app at http://localhost:8080/${APP_NAME}
   3. Test the functionality
"""
        }
        failure {
            echo """
‚ùå Deployment Failed! ‚ùå

üìã Check the following:
   1. Tomcat service is installed and running
   2. Port 8080 is not blocked
   3. WAR file was built successfully
   4. Database is accessible
   
üîç Troubleshooting:
   ‚Ä¢ Check Jenkins console logs above
   ‚Ä¢ Verify Tomcat logs in: ${TOMCAT_HOME}\\logs
   ‚Ä¢ Check application logs for errors
"""
        }
    }
}