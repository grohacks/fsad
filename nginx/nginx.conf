events {
    worker_connections 1024;
}

http {
    upstream jenkins {
        server jenkins:8080;
    }

    upstream sonarqube {
        server sonarqube:9000;
    }

    upstream nexus {
        server nexus:8081;
    }

    upstream grafana {
        server grafana:3000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=jenkins:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=sonar:10m rate=5r/s;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Jenkins
    server {
        listen 80;
        server_name jenkins.local localhost;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name jenkins.local localhost;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_private_key /etc/nginx/ssl/nginx.key;

        client_max_body_size 100m;

        location / {
            limit_req zone=jenkins burst=20 nodelay;
            
            proxy_pass http://jenkins;
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;

            # Jenkins specific headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;

            # Security headers
            add_header X-Frame-Options SAMEORIGIN;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        }
    }

    # SonarQube
    server {
        listen 80;
        server_name sonar.local;

        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name sonar.local;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_private_key /etc/nginx/ssl/nginx.key;

        client_max_body_size 50m;

        location / {
            limit_req zone=sonar burst=10 nodelay;
            
            proxy_pass http://sonarqube;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Security headers
            add_header X-Frame-Options SAMEORIGIN;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        }
    }

    # Nexus Repository
    server {
        listen 80;
        server_name nexus.local;

        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name nexus.local;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_private_key /etc/nginx/ssl/nginx.key;

        client_max_body_size 1G;

        location / {
            proxy_pass http://nexus;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Nexus specific settings
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;

            # Security headers
            add_header X-Frame-Options SAMEORIGIN;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        }
    }

    # Grafana
    server {
        listen 80;
        server_name grafana.local;

        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name grafana.local;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_private_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support for live updates
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Security headers
            add_header X-Frame-Options SAMEORIGIN;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        }
    }
}