# Multi-stage build for Spring Boot application
FROM maven:3.8.5-openjdk-17-slim AS backend-builder

WORKDIR /app

# Copy pom.xml first for better caching
COPY pom.xml .
COPY lombok.config .

# Download dependencies
RUN mvn dependency:go-offline -B

# Copy source code
COPY src ./src

# Build the application
RUN mvn clean package -DskipTests -B

# Production stage
FROM openjdk:17-jdk-slim

# Install security updates and monitoring tools
RUN apt-get update && apt-get upgrade -y && apt-get install -y \
    curl \
    wget \
    procps \
    net-tools \
    && rm -rf /var/lib/apt/lists/*

# Create application user
RUN groupadd -r appuser && useradd -r -g appuser appuser

WORKDIR /app

# Copy the built jar file
COPY --from=backend-builder /app/target/*.jar app.jar

# Copy configuration files
COPY --from=backend-builder /app/src/main/resources/application.properties ./

# Set ownership
RUN chown -R appuser:appuser /app

# Health check script
COPY --chown=appuser:appuser <<EOF /app/healthcheck.sh
#!/bin/bash
curl -f http://localhost:8080/actuator/health || exit 1
EOF

RUN chmod +x /app/healthcheck.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /app/healthcheck.sh

# Expose port
EXPOSE 8080

# Switch to non-root user
USER appuser

# JVM optimization for containers
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"

# Spring profiles
ENV SPRING_PROFILES_ACTIVE=production

# Start the application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]